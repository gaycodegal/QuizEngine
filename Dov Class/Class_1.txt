Class 1: Dov Kruger: CPE 810 Java/C++ : Dov.Kruger@stevens.edu : Official teacher now : B217 B213: Tue 1-2:30
Exams: closed book, closed notes
2% misc picture & survey: 
19% midterm : 29% final : 
15% homework questions : 
35% programming homework

Quizes on Canvas
Expected Work:
Prepare by reading announcemnts / readings
Attend all classes
Acitvely learn in class: ask questions, bring yourlaptop & write code
Lang:
Processing (Java)
C++
Processing submit .pde
Java: .java or
.zip (src folder with A.java B.java)
Code is acceptable if it compiles on g++ 4.8.1
Mac os use llvm compiler
Hand in something rather than nothing
Homework may not be turned in more than two weeks late.

On all code
/*@author:Stev
 *DATE:xx/xx/xxxx
 *cite:NAMES_OF_HELPERS (You have to re-implement the source)
 *
 */
Discussions:
Gallery (Screenshot of your best work) (with code)
Q&A: MUST READ ALL POSTS HERE (HELP OTHER PEOPLE WITH QUESTIONS) (NO CODE EVAR) (ONE LINE IS OK IF NOT GIVING ANSWER)

All of the books are in the reference on canvas (All open source & free apparently)

TODO:
Install Processing, Eclipse, and java
Processing (has better graphics)
Class four goes into Java not processing
C++ : Pointers & references

1: processing.org & download
www.oracle.com/ & download java
g++ --version // Install this!!!
Eclipse-cdt (the C development kit)

Stack Overflow

fill(r,g,b)//color system
stroke(r,g,b)
strokeWeight(w)
rect(x,y,w,h)
every function in processing can do instead of r,g,b just a (v) (value)
background(r,g,b)// resets the background each frame
Example of overflow - positive+positive = negative
exit(); quits the program : 
useful for :
void setup(){
    print("hello");
    exit();
}
also print and println instead of Sys.out.print();

width & height are predefined variables meaning current screen width and height

Casting is automatic when going up;
All operations that are smaller than an int is automatically made into an integer

ONLY TWO METHODS

void setup(){
    size(w,h);
    
}
void draw(){
    //draw commands like fill or stroke
    
}



Explained variables
int 32 (+/- 2^31), long 64, short 16, byte 8, float, double

explained the 
if ( x > width || x < 0){
    dx = -dx;
}

So basically first was draw a box, then get it moving.
Afterwards, make it bounce on x > width; Then on x < 0; then say hey we could use  || instead
(great point for a dx variable)
Then do the same for y
Afterwards, we want to bounce on the box's frame, so install the code for that (make final if can)

Then what if we go 2 times faster on bounce then limit the dx
intro to else if here
then make sure to set x to zero to fix bug (also set dx to 1)

save as pde



Next we move onto the while loop

var count = 0;
while(count < 10){
print(count + " ");
count++;//change this to +=3; *=2;(error) ect;
}

if( n  is odd){
*3 add one
}
if(even ){
/2
}

take a unit circle
circumscribe a triangle
then another circle 
then a square
keep using a more circles and going up by sides +1
(homework)
start with unit circle

so you have two infinite series one is the areas


3n+1 find the longest sequence for n < 100,000

var array = [];

stroke width can be zero





